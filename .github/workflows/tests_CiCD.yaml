name: CI/CD demo

on: 
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  tests_unitaires:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: python -m pip install -r requirements.txt

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Build and run Docker containers
        run: |
          mkdir postgresql_data
          docker-compose -f docker-compose-dev.yml build
          docker-compose -f docker-compose-dev.yml up -d
          sleep 10  # Augmenter le temps de sommeil pour permettre aux services de d√©marrer

      - name: Show containers
        run: |
          docker-compose -f docker-compose-dev.yml ps
          docker network ls

      - name: Install Python dependencies inside the Docker container
        run: |
          docker exec -i formation-devops-training_default python -m pip install -r /opt/formation-devops-training/requirements.txt

      - name: Run unit tests
        run: |
          docker exec -i formation-devops-training_default python3 /opt/formation-devops-training/test_main.py

      - name: Run integration test
        run: |
          docker exec -i formation-devops-training_default pytest /opt/formation-devops-training/test_e2e.py

      - name: Stop and remove Docker containers
        run: |
          docker-compose -f docker-compose-dev.yml down
          rm -rf postgresql_data
