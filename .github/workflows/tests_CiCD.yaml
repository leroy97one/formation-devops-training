name: CI/CD demo

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build_and_push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    outputs:
      app_version: ${{ steps.set_version.outputs.app_version }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set APP_VERSION environment variable
        id: set_version
        run: echo "::set-output name=app_version::v$(date +%Y%m%d%H%M%S)"

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/demo:${{ steps.set_version.outputs.app_version }} .
          docker push ${{ secrets.DOCKER_USERNAME }}/demo:${{ steps.set_version.outputs.app_version }}
  tests_unitaires:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    needs: build_and_push
    env:
      APP_VERSION: ${{ needs.build_and_push.outputs.app_version }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version
          docker --version
      - name: Build and run Docker containers
        run: |
          mkdir -p postgresql_data
          docker-compose -f docker-compose-dev.yml build 
          docker-compose -f docker-compose-dev.yml up -d
          sleep 10

      - name: Show containers
        run: |
          docker-compose -f docker-compose-dev.yml up -d
          docker-compose -f docker-compose-dev.yml ps
          docker-compose -f docker-compose-dev.yml logs
          docker network ls
      - name: Install dependencies
        run: |
          python -m pip install -r requirements.txt

          docker-compose -f docker-compose-dev.yml ps
      #    docker exec -i formation-devops-training-web-1 python -m pip install -r /app/requirements.txt

      

      

      - name: Run unit tests
        run: |
          docker run -d -i --name unit_tests --network formation-devops-training_default \
            -v $PWD:/opt/formation-devops-training \
            -w /opt/formation-devops-training \
            python:3.10-slim bash
          docker exec -i unit_tests python3 -m pip install -r requirements.txt
          docker exec -i unit_tests python3 /opt/formation-devops-training/test_main.py

     



      - name: Run integration test
        run: |
          sudo chown -R $USER:$USER /home/runner/work/formation-devops-training/
          sudo chmod 755 /home/runner/work/formation-devops-training
          
          pytest test_e2e.py



      - name: Check error logs
        run: |
          if [ -f error.log ]; then cat error.log; fi

  deploy:
    runs-on: self-hosted
    needs: tests_unitaires
    env:
      APP_VERSION: ${{ needs.build_and_push.outputs.app_version }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and run Docker container        
        run: |
          export APP_VERSION=$(date +%Y%m%d%H%M%S)
          mkdir postgresql_data
          docker-compose -f docker-compose-dev.yml build
          docker-compose -f docker-compose-dev.yml up -d
          sleep 5
      - name: Show containers
        run: |
          
          docker-compose -f docker-compose-dev.yml ps
      - name: Kill containers
        run: ./killcontainers