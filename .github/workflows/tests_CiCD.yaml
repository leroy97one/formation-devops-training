name: CI/CD demo

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build_and_push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set APP_VERSION environment variable
        id: set_version
        run: echo "APP_VERSION=$(date +%Y-%m-%d-%H-%M-%S)" >> $GITHUB_ENV

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/formation-devops-training:${{ env.APP_VERSION }} .
          docker push ${{ secrets.DOCKER_USERNAME }}/formation-devops-training:${{ env.APP_VERSION }}

  tests_unitaires:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    needs: build_and_push

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Build and run Docker containers
        run: |
          mkdir -p postgresql_data
          docker-compose -f docker-compose-dev.yml up -d
          docker-compose -f docker-compose-dev.yml logs web
          sleep 10  # Increase sleep time to allow services to start

      - name: Show containers
        run: |
          docker-compose -f docker-compose-dev.yml ps
          docker network ls

      - name: Install dependencies
        run: |
          python -m pip install -r requirements.txt
          docker exec -i formation-devops-training_web_1 python -m pip install -r /app/requirements.txt

      - name: Run unit tests
        run: |
          docker run -d -i --name unit_tests --network formation-devops-training_default \
            -v $PWD:/opt/formation-devops-training \
            -w /opt/formation-devops-training \
            python:3.10-slim bash
          docker exec -i unit_tests python3 -m pip install -r requirements.txt
          docker exec -i unit_tests python3 /opt/formation-devops-training/test_main.py

      - name: Run integration test
        run: |
          pytest test_e2e.py

  deploy:
    runs-on: self-hosted
    needs: tests_unitaires

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set APP_VERSION environment variable
        run: echo "APP_VERSION=${{ env.APP_VERSION }}" >> $GITHUB_ENV

      - name: Build and run Docker container
        run: |
          mkdir -p postgresql_data
          docker-compose -f docker-compose-dev.yml up -d
          sleep 10  # Increase sleep time to allow services to start

      - name: Show containers
        run: |
          docker-compose -f docker-compose-dev.yml ps
